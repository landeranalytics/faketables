% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{.better_list_flatten}
\alias{.better_list_flatten}
\title{Flatten a list}
\usage{
.better_list_flatten(
  x,
  .fn,
  name_spec = "{outer}_{inner}",
  name_repair = c("minimal", "unique", "check_unique", "universal")
)
}
\arguments{
\item{x}{A list.}

\item{.fn}{A function that determines if the list item is of the desired
class. It must return a \code{logical}.}

\item{name_spec}{If both inner and outer names are present, control
how they are combined. Should be a glue specification that uses
variables \code{inner} and \code{outer}.}

\item{name_repair}{One of \code{"minimal"}, \code{"unique"}, \code{"universal"}, or
\code{"check_unique"}. See \code{\link[vctrs:vec_as_names]{vctrs::vec_as_names()}} for the meaning of these
options.}
}
\value{
A list where the class of every item is evaluated to \code{TRUE} by \code{.fn}
OR a list that cannot be flattened any more.
}
\description{
Unlike \code{\link[purrr:list_flatten]{purrr::list_flatten()}} which only removes a single layer
of hierarchy, \code{.better_list_flatten()} flattens a list until it is a list
where every item matches the desired class OR it is completely flattened
and cannot be flattened further.
}
\examples{
\dontrun{
chr <- list('a', list(c('b', 'c'), list('d')))
.better_list_flatten(chr, is.character)
}

}
\keyword{internal}
