[{"path":"https://landeranalytics.github.io/faketables/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Lander Analytics Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://landeranalytics.github.io/faketables/articles/faketables.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"faketables","text":"vignette complete example shows use faketables components. vignette create shiny app allows us modify data dataset preview component faketables object. -depth example available .","code":""},{"path":"https://landeranalytics.github.io/faketables/articles/faketables.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"faketables","text":"Load library. make sure things don’t get hand, first filter just first six rows. , want rownames column, sake example, convert qsec list column every row vector length two original value qsec subtracted added 1. select columns wish display.","code":"library(faketables) #>  #> Attaching package: 'faketables' #> The following object is masked from 'package:stats': #>  #>     update df <-   mtcars |>   head() |>   tibble::rownames_to_column() |>   dplyr::mutate('qsec' = purrr::map(.data$qsec, \\(x) round(c(x - 1, x + 1)))) |>   dplyr::select('rowname', 'mpg', 'cyl', 'qsec')"},{"path":[]},{"path":"https://landeranalytics.github.io/faketables/articles/faketables.html","id":"understanding-input_call","dir":"Articles","previous_headings":"Creating a faketable","what":"Understanding input_call()","title":"faketables","text":"faketables creates inputs dynamically, can’t work output function, rather needs work function . called “bare function”. input_call() requires bare function list args passed bare function. bare function usually takes form function call, without parenthesis arguments sum sum() function. Alternatively, function definition can passed. important match exactly, updated table contain rows. args list desired arguments normally passed function, except inputId. Even one supplied, ignored. can stored variable passed directly input argument col_def().","code":""},{"path":"https://landeranalytics.github.io/faketables/articles/faketables.html","id":"creating-a-col_def","dir":"Articles","previous_headings":"Creating a faketable","what":"Creating a col_def","title":"faketables","text":"First, need col_def column wish display. name c_def. col_def must name column created , input_call object, bare function call cast ensure column desired class, width. can also optional display_name. things note : label NULL input isn’t labelled row, doesn’t way. 'rowname' uses anonymous function wraps input shinyjs::disabled(). rowname column can rendered part table without users allowed modify value. 'qsec' uses anonymous function wraps actual casting function. qsec list column, still want ensure contents list match desired class.","code":"c_def <- list(   col_def(     name = 'rowname',     input = input_call(       fun = \\(inputId, ...) { shinyjs::disabled(shiny::textInput(inputId, ...)) },       args = list(label = NULL, placeholder = 'Vehicle Name')     ),     cast = as.character,     width = 3,     display_name = 'Vehicle Name'   ),   col_def(     name = 'mpg',     input = input_call(       fun = shiny::numericInput,       args = list(label = NULL)     ),     cast = as.numeric,     width = 2,     display_name = 'MPG'   ),   col_def(     name = 'cyl',     input = input_call(       fun = shiny::selectInput,       args = list(label = NULL, choices = c(4, 6, 8))     ),     cast = as.integer,     width = 2,     display_name = 'CYL'   ),   col_def(     name = 'qsec',     input = input_call(       fun = shiny::sliderInput,       args = list(label = NULL, min = 10, max = 25)     ),     cast = \\(x) purrr::map(x, as.numeric),     width = 3,     display_name = 'QSEC'   ) )"},{"path":"https://landeranalytics.github.io/faketables/articles/faketables.html","id":"creating-a-table_def","dir":"Articles","previous_headings":"Creating a faketable","what":"Creating a table_def","title":"faketables","text":"table_def , core, collection col_def objects neatly organized tibble. name t_def.","code":"t_def <- table_def(c_def)"},{"path":"https://landeranalytics.github.io/faketables/articles/faketables.html","id":"creating-a-faketable-1","dir":"Articles","previous_headings":"Creating a faketable","what":"Creating a faketable","title":"faketables","text":"last step creating faketable bring data table_def together. Since know rowname column unique, use rowId. also supply empty list delete buttons show row.","code":"f_tab <- faketable(df, t_def, rowId = 'rowname', show_delete = list())"},{"path":[]},{"path":"https://landeranalytics.github.io/faketables/articles/faketables.html","id":"creating-the-ui","dir":"Articles","previous_headings":"The Shiny App","what":"Creating the UI","title":"faketables","text":"UI relatively simple ’re just trying demonstrate faketable. First, use faketablesUI() make sure faketable rendered. create row inputs match col_def can input data press 'Add Row' button add row. bottom, radio button lets us switch faketable object tables preview.","code":"ui <- shiny::fluidPage(   title = 'mtcars',   shinyjs::useShinyjs(),   faketablesUI(),   shiny::tags$h3('Add Row'),   shiny::fluidRow(     shiny::column(       width = 2, shiny::actionButton('add_row', 'Add Row')     ),     shiny::column(       width = 3, shiny::textInput('rowname', 'Vehicle Name')     ),     shiny::column(       width = 2, shiny::textInput('mpg', 'MPG', value = 50)     ),     shiny::column(       width = 2, shiny::selectInput('cyl', 'CYL', c(4, 6, 8))     ),     shiny::column(       width = 3, shiny::sliderInput('qsec', 'QSEC', min = 10, max = 25, value = c(10, 25))     )   ),   shiny::tags$h3('Preview Table'),   shiny::radioButtons(     'preview',      label = 'Choose Table to Preview',      choices = c('data', 'inserted', 'updated', 'deleted'),     inline = TRUE   ),   shiny::tableOutput('preview_table') )"},{"path":"https://landeranalytics.github.io/faketables/articles/faketables.html","id":"creating-the-server","dir":"Articles","previous_headings":"The Shiny App","what":"Creating the Server","title":"faketables","text":"first thing call faketablesServer() faketable, f_tab, assign back f_tab. longer faketables object, shiny::reactive() holds faketables object. , order access faketable, now use f_tab() rather f_tab. reactive handle row updating deleting . order support inserting rows, need create event listener 'Add Row' button call faketablesInsert using now reactive f_tab new data want insert.","code":"server <- function(input, output, session) {   f_tab <- faketablesServer(faketable = f_tab)      # get the table referenced by the radio buttons   # `object@property_name` is the same as `prop(object, 'property_name')`   preview_table <- shiny::reactive({ S7::prop(f_tab(), input$preview) })   # use an un-exported function to ensure list columns render   output$preview_table <- shiny::renderTable(faketables:::.list_col_to_chr(preview_table()))      shiny::observe({     ins <- tibble::tibble(       'rowname' = input$rowname,       'mpg' = as.numeric(input$mpg),       'cyl' = as.numeric(input$cyl),       'qsec' = list(as.integer(input$qsec))     )     faketables::faketablesInsert(f_tab, ins)   }) |>     shiny::bindEvent(input$add_row) }"},{"path":"https://landeranalytics.github.io/faketables/articles/faketables.html","id":"running-the-app","dir":"Articles","previous_headings":"The Shiny App","what":"Running the app","title":"faketables","text":"","code":"shiny::shinyApp(ui, server)"},{"path":"https://landeranalytics.github.io/faketables/articles/favorite_pizza.html","id":"create-the-column-definitions-with-col_def","dir":"Articles","previous_headings":"","what":"Create the column definitions with col_def()","title":"Favorite Pizza Places","text":"","code":"c_def <- list(   faketables::col_def(     name = 'Name',     input = faketables::input_call(       fun = \\(inputId, ...) { shinyjs::disabled(shiny::textInput(inputId, ...)) },       args = list(label = NULL)     ),     cast = as.character,     width = 2   ),   faketables::col_def(     name = 'Address',     input = faketables::input_call(       fun = shiny::textInput,       args = list(label = NULL)     ),     cast = as.character,     width = 2   ),   faketables::col_def(     name = 'City',     input = faketables::input_call(       fun = shiny::selectInput,       args = list(         label = NULL,         choices = c('Bronx', 'Brooklyn', 'New York', 'Queens', 'Staten Island')       )     ),     cast = as.character,     width = 2   ),   faketables::col_def(     name = 'Zip',     input = faketables::input_call(       fun = shiny::numericInput,       args = list(label = NULL, min = 10001, max = 11697, step = 1)     ),     cast = as.integer,     width = 1   ),   faketables::col_def(     name = 'FavoritePizza',     input = faketables::input_call(       fun = shiny::textInput,       args = list(label = NULL)     ),     cast = as.character,     width = 2,     display_name = 'Favorite Pizza'   ),   faketables::col_def(     name = 'Rating',     input = faketables::input_call(       fun = shiny::sliderInput,       args = list(label = NULL, min = 11, max = 20)     ),     cast = as.integer,     width = 2   ) )"},{"path":"https://landeranalytics.github.io/faketables/articles/favorite_pizza.html","id":"create-the-table-definition-with-table_def","dir":"Articles","previous_headings":"","what":"Create the table definition with table_def()","title":"Favorite Pizza Places","text":"","code":"t_def <- faketables::table_def(c_def)"},{"path":"https://landeranalytics.github.io/faketables/articles/favorite_pizza.html","id":"get-data-and-create-the-faketable","dir":"Articles","previous_headings":"","what":"Get data and create the faketable","title":"Favorite Pizza Places","text":"","code":"pz <-   jsonlite::read_json(     path = 'https://www.jaredlander.com/data/FavoritePizzaPlaces.json',     simplifyVector = TRUE   ) |>   tibble::as_tibble() |>   tidyr::unnest(cols = c('Details', 'Coordinates')) |>   dplyr::mutate(     'Zip' = as.integer(.data$Zip),     'FavoritePizza' = 'Cheese',     'Rating' = 11L   ) |>   faketables::faketable(table_def = t_def, show_delete = list(width = 1))"},{"path":"https://landeranalytics.github.io/faketables/articles/favorite_pizza.html","id":"create-the-ui","dir":"Articles","previous_headings":"","what":"Create the UI","title":"Favorite Pizza Places","text":"","code":"ui <- bslib::page_navbar(   title = 'Favorite Pizza Places',   shinyjs::useShinyjs(),   bslib::nav_panel(     title = 'NYC',     bslib::layout_columns(       col_widths = c(4, 8),       min_height = '500px',       bslib::card(         bslib::card_header('Add Favorite'),         bslib::card_body(           shiny::fluidRow(             shiny::column(               width = 12,               shiny::fluidRow(                 shiny::column(                   width = 6,                   shiny::textInput('name', label = 'Name')                 ),                 shiny::column(                   width = 6,                   shiny::textInput('address', label = 'Address')                 )               ),               shiny::fluidRow(                 shiny::column(                   width = 6,                   shiny::selectInput(                     'city',                     label = 'City',                     choices = c('Bronx', 'Brooklyn', 'New York', 'Queens', 'Staten Island'),                     selected = 'New York')                 ),                 shiny::column(                   width = 6,                   shiny::numericInput(                     'zip',                     label = 'Zip',                     value = 10001,                     min = 10001,                     max = 11697,                     step = 1)                   )               ),               shiny::fluidRow(                 shiny::column(                   width = 6,                   shiny::textInput('latitude', label = 'Latitude')                 ),                 shiny::column(                   width = 6,                   shiny::textInput('longitude', label = 'Longitude')                 )               ),               shiny::fluidRow(                 shiny::column(                   width = 6,                   shiny::textInput('favoritePizza', label = 'Favorite Pizza')                 ),                 shiny::column(                   width = 6,                   shiny::sliderInput(                     'rating',                     label = 'Pizza Rating',                     min = 11,                     max = 20,                     value = 11)                 )               )             )           ),           shiny::fluidRow(             shiny::actionButton('add', label = 'Add Data')           )         )       ),       bslib::card(         full_screen = TRUE,         bslib::card_header('Map'),         bslib::card_body(           leaflet::leafletOutput(outputId = 'map'),         )       )     ),     bslib::card(       full_screen = TRUE,       bslib::card_header('Table'),       bslib::card_body(         faketables::faketablesUI()       )     )   ) ) #> Warning: Navigation containers expect a collection of #> `bslib::nav_panel()`/`shiny::tabPanel()`s and/or #> `bslib::nav_menu()`/`shiny::navbarMenu()`s. Consider using `header` or `footer` #> if you wish to place content above (or below) every panel's contents."},{"path":"https://landeranalytics.github.io/faketables/articles/favorite_pizza.html","id":"create-the-server","dir":"Articles","previous_headings":"","what":"Create the server","title":"Favorite Pizza Places","text":"","code":"server <- function(input, output, session) {   pz <- faketables::faketablesServer(faketable = pz)   output$map <-     leaflet::leaflet() |>     leaflet::addTiles() |>     leaflet::setView(-74.0060, 40.7128, 11) |>     leaflet::renderLeaflet()    shiny::observe({     ins <- tibble::tibble(       'Name' = input$name,       'Address' = input$address,       'City' = input$city,       'State' = 'NY',       'Zip' = as.integer(input$zip),       'latitude' = as.numeric(input$latitude),       'longitude' = as.numeric(input$longitude),       'FavoritePizza' = input$favoritePizza,       'Rating' = as.integer(input$rating)     ) |>       suppressWarnings()     if (any(is.na(unlist(ins)) | unlist(ins) == '')) {       shiny::showNotification(         'Something went wrong. Please validate your input data and try again.',         type = 'error'       )     } else {       faketables::faketablesInsert(pz, ins)     }   }) |>     shiny::bindEvent(input$add)    shiny::observe({     map_data <-       pz()@data |>       dplyr::mutate(         'label' = shiny::HTML(glue::glue('{.data$Name}<br>{.data$Address}, {.data$City}, NY, {.data$Zip}')),         .by = '.rowId'       ) |>       dplyr::mutate(         'fill_color' = dplyr::case_when(           .data$label == 'cheese' ~ '#FFCA45',           .default = '#FFCA45'         )       )     leaflet::leafletProxy('map', data = map_data) |>       leaflet::clearMarkers() |>       leaflet::addCircleMarkers(         lng = ~longitude,         lat = ~latitude,         radius = ~Rating + 4,         color = '#C9AA6E',         weight = 4,         opacity = 1,         fillColor = ~fill_color,         fillOpacity = 1,         label = ~label       )   }) |>     shiny::bindEvent(input$update, pz()) }"},{"path":"https://landeranalytics.github.io/faketables/articles/favorite_pizza.html","id":"run-the-app","dir":"Articles","previous_headings":"","what":"Run the app","title":"Favorite Pizza Places","text":"","code":"shiny::shinyApp(ui, server)"},{"path":"https://landeranalytics.github.io/faketables/articles/inserting_data.html","id":"insert","dir":"Articles","previous_headings":"","what":"insert()","title":"Inserting Data","text":"insert() use faketables object actual data insertion. called automatically faketablesServer() insert argument supplied data. Alternatively, faketables used outside Shiny context data history properties, can used safely add new data faketables object. Usage simply insert(faketable, new_data).","code":""},{"path":"https://landeranalytics.github.io/faketables/articles/inserting_data.html","id":"faketablesinsert","dir":"Articles","previous_headings":"","what":"faketablesInsert()","title":"Inserting Data","text":"faketablesInsert() use Shiny apps app developer wants new data added faketables object represented reactive object. Just like insert(), provided two arguments. latter new data inserted. However, unlike insert(), first argument faketables object, rather variable represents output faketablesServer() call. Usage little bit complex insert() requires two components. first server call assign faketablesServer() second call faketablesInsert new data actively added faketables object.","code":"f_tab <- faketables::faketable() server <- function(input, output, session) {   f_tab <- faketables::faketablesServer(f_tab)      shiny::observe({     faketables::faketablesInsert(f_tab, new_data)   }) |>     shiny::bindEvent(input$new_data_button) }"},{"path":"https://landeranalytics.github.io/faketables/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gus Lipkin. Maintainer, author. Lander Analytics. Copyright holder, funder.","code":""},{"path":"https://landeranalytics.github.io/faketables/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lipkin G (2024). faketables: Create Table Shiny Inputs. R package version 0.1.0, https://landeranalytics.github.io/faketables/, https://github.com/landeranalytics/faketables.","code":"@Manual{,   title = {faketables: Create a Table of Shiny Inputs},   author = {Gus Lipkin},   year = {2024},   note = {R package version 0.1.0, https://landeranalytics.github.io/faketables/},   url = {https://github.com/landeranalytics/faketables}, }"},{"path":[]},{"path":"https://landeranalytics.github.io/faketables/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Create a table of shiny inputs","text":"faketables table construction tool creates renders tables using Shiny inputs, managing data inserts, updates, deletions. Users define column definitions using provided constructors pass data, faketables handles rest. faketables Shiny module, can used Shiny application excels applications users need interact data great detail.","code":""},{"path":"https://landeranalytics.github.io/faketables/index.html","id":"benefits","dir":"","previous_headings":"","what":"Benefits","title":"Create a table of shiny inputs","text":"faketables provides several distinct benefits packages similar features DT reactable: Users can implement Shiny input method wish cell faketables object contains entirety data shown user, along columns developer chosen hide user Information rows inserted, updated, deleted retained. , data stored entirety. setup can performed outside Shiny server context developers need two functions Shiny app, one UI one server, update delete functionality, third needed insertions.","code":""},{"path":"https://landeranalytics.github.io/faketables/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create a table of shiny inputs","text":"can install development version faketables GitHub :","code":"# install.packages(\"pak\") pak::pak(\"landeranalytics/faketables\")"},{"path":"https://landeranalytics.github.io/faketables/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create a table of shiny inputs","text":"Usage detailed Get Started Vignette example app best pizza NYC can found code app .","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/col_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a faketable column definition — col_def","title":"Create a faketable column definition — col_def","text":"Create faketable column definition","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/col_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a faketable column definition — col_def","text":"","code":"col_def(name, input_call, cast, width, display_name = name, ...)"},{"path":"https://landeranalytics.github.io/faketables/reference/col_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a faketable column definition — col_def","text":"name column name input_call input_call() object cast bare function call convert column intended class. important match exactly, updated table contain rows. width grid width column (must 1 12) display_name name use column header ... Elements include within column","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/col_def.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a faketable column definition — col_def","text":"col_def() object","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/col_def.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a faketable column definition — col_def","text":"","code":"# to create a col_def for mtcars$mpg # it is a shiny::textInput that is disabled using shinyjs::disabled col_def(   name = 'mpg',   input = input_call(     fun = shiny::textInput,     args = list(label = NULL, placeholder = 'mpg')   ),   cast = as.numeric,   width = 3,   display_name = 'MPG' ) #> # A tibble: 1 × 5 #>   name  input_call cast   width display_name #> * <chr> <list>     <list> <dbl> <chr>        #> 1 mpg   <function> <fn>       3 MPG"},{"path":"https://landeranalytics.github.io/faketables/reference/create_table_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a faketables table body — .create_table_body","title":"Create a faketables table body — .create_table_body","text":"output passed shiny::renderUI() server","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/create_table_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a faketables table body — .create_table_body","text":"","code":".create_table_body(faketable, ns)"},{"path":"https://landeranalytics.github.io/faketables/reference/create_table_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a faketables table body — .create_table_body","text":"faketable faketable() object ns session namespace shiny::NS()session$ns","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/create_table_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a faketables table body — .create_table_body","text":"shiny::fluidRow() containing shiny::column() column specified faketable's table_def()","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/delete_button.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and monitor a delete button — delete_button","title":"Create and monitor a delete button — delete_button","text":"functions used internally faketables","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/delete_button.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and monitor a delete button — delete_button","text":"","code":".delete_button(   rowId,   ...,   .delete_style = \"background: #bf5959; color: #fff; border: none; width: 100%\",   .delete_label = \"Delete\" )  .create_delete_listener(ns = shiny::NS(NULL))"},{"path":"https://landeranalytics.github.io/faketables/reference/delete_button.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and monitor a delete button — delete_button","text":"rowId .rowId value corresponds row button displayed ... arguments pass shiny::column(). can include width. provided, width default 2. .delete_style CSS style delete button .delete_label label delete button ns output call shiny::NS()","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/delete_button.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and monitor a delete button — delete_button","text":"shiny::column() containing shiny::actionButton() allows users send delete request. HTML <head> tag button listener","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/delete_button.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create and monitor a delete button — delete_button","text":"delete button actually delete row data, creates button reports row user wishes delete. three components required use buttons. first placing .create_delete_listener() somewhere shiny app's ui. second calling .delete_button() create button inserting using shiny::insertUI(). third creating shiny event listener acts button presses monitoring input$table_btns.","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/delete_button.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create and monitor a delete button — delete_button","text":"Joe Marlo","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/delete_button.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and monitor a delete button — delete_button","text":"","code":"if (interactive()) { # this example creates a button for every row of `mtcars` # when the user presses a button, it will print the inputId of the button pressed shiny::shinyApp(   ui = shiny::tagList(     .create_delete_listener(), # add button listener     shiny::div(id = 'delete-buttons') # create div for buttons to be inserted   ),   server = \\(input, output, session) {     mtcars |>       tibble::rownames_to_column() |>       dplyr::pull(.data$rowname) |>       purrr::map_chr(digest::digest) |> # create row ids       purrr::walk(\\(x) {         shiny::insertUI( # insert delete button into ui           selector = '#delete-buttons',           where = 'afterBegin',           ui = shiny::fluidRow(.delete_button(x, list(width = 2)))         )       })      shiny::observe({      print(glue::glue('Button {input$table_btns} was pressed'))     }) |>      shiny::bindEvent(input$table_btns)   } ) }"},{"path":"https://landeranalytics.github.io/faketables/reference/dot-create_rowid.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a .rowId column to a data frame — .create_rowid","title":"Add a .rowId column to a data frame — .create_rowid","text":"Add .rowId column data frame","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/dot-create_rowid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a .rowId column to a data frame — .create_rowid","text":"","code":".create_rowid(data, rowId = NULL)"},{"path":"https://landeranalytics.github.io/faketables/reference/dot-create_rowid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a .rowId column to a data frame — .create_rowid","text":"data data frame rowId name primary key column","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/dot-create_rowid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a .rowId column to a data frame — .create_rowid","text":"data new column named .rowId column position one MD5 hash uniquely identifying row","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/dot-create_rowid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a .rowId column to a data frame — .create_rowid","text":"","code":"faketables:::.create_rowid(mtcars) #>                                               .rowId  mpg cyl  disp  hp drat #> Mazda RX4           47526c32f31d281567008adb041b2fd2 21.0   6 160.0 110 3.90 #> Mazda RX4 Wag       d5eee0776dcb1efcfa5ed384518657cc 21.0   6 160.0 110 3.90 #> Datsun 710          b9adc44e0e93ee01b46cc04e7e074942 22.8   4 108.0  93 3.85 #> Hornet 4 Drive      1213af691f5d378a4f4f5351c6e5f70e 21.4   6 258.0 110 3.08 #> Hornet Sportabout   98dd381db172e625f3080027787fa89e 18.7   8 360.0 175 3.15 #> Valiant             b34193ebddc0423ec46de88dbe91ab3a 18.1   6 225.0 105 2.76 #> Duster 360          ccc3840eec0a6a1a425dcd9f5510d981 14.3   8 360.0 245 3.21 #> Merc 240D           04134376fe3bedc5bd3bea0b6f91944b 24.4   4 146.7  62 3.69 #> Merc 230            49ea69aba3bd961e3cd63b0d9460180c 22.8   4 140.8  95 3.92 #> Merc 280            91c067cb94d181625dc43ab8b17bfb03 19.2   6 167.6 123 3.92 #> Merc 280C           c6bcf2617115d703d5e715aa56c9cf23 17.8   6 167.6 123 3.92 #> Merc 450SE          2b799e768723e436099be72b52764d9f 16.4   8 275.8 180 3.07 #> Merc 450SL          be824329898e42a9e2cfd4d183c91ade 17.3   8 275.8 180 3.07 #> Merc 450SLC         b9152d8228f609ea5c828ad91f3beb96 15.2   8 275.8 180 3.07 #> Cadillac Fleetwood  175d0f6db0cca301ef365594b14d94e4 10.4   8 472.0 205 2.93 #> Lincoln Continental f3a1f41880b58ed9a218e99a52f0b9f2 10.4   8 460.0 215 3.00 #> Chrysler Imperial   cd8ec9b59ef2e69459fa09ca1677cd41 14.7   8 440.0 230 3.23 #> Fiat 128            bdd09f0e10497898fe672fe6284c5fc5 32.4   4  78.7  66 4.08 #> Honda Civic         b519f6120fd034b891715d78ec40aac4 30.4   4  75.7  52 4.93 #> Toyota Corolla      c67f97a52e99646a96ba6456a99d3613 33.9   4  71.1  65 4.22 #> Toyota Corona       4f59eb143737e5d7ce30000dd2ec2130 21.5   4 120.1  97 3.70 #> Dodge Challenger    aca142e7f0399a245ef3e3eedc5dd80c 15.5   8 318.0 150 2.76 #> AMC Javelin         44a97c553c0a631035fea4b512493f0c 15.2   8 304.0 150 3.15 #> Camaro Z28          6a905490a994a1d600197efd174fd698 13.3   8 350.0 245 3.73 #> Pontiac Firebird    8f0930e35bdb08d3b0cfd8185b60e8de 19.2   8 400.0 175 3.08 #> Fiat X1-9           f9a3136042f9f74a243071e43dff649d 27.3   4  79.0  66 4.08 #> Porsche 914-2       d7c655f27d2bd4840b77f62e478f7383 26.0   4 120.3  91 4.43 #> Lotus Europa        edc97e5827b3d56fc750ce1209ecef90 30.4   4  95.1 113 3.77 #> Ford Pantera L      a1073a9273ff27370eeb9dc1e7b70f2f 15.8   8 351.0 264 4.22 #> Ferrari Dino        6d995a641093e7af0b6c7302f2e0cc7a 19.7   6 145.0 175 3.62 #> Maserati Bora       2dce7d8071dfde7bcba7a3660d629d14 15.0   8 301.0 335 3.54 #> Volvo 142E          3551a470892dc9ee56a80ffcfb211344 21.4   4 121.0 109 4.11 #>                        wt  qsec vs am gear carb #> Mazda RX4           2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       2.875 17.02  0  1    4    4 #> Datsun 710          2.320 18.61  1  1    4    1 #> Hornet 4 Drive      3.215 19.44  1  0    3    1 #> Hornet Sportabout   3.440 17.02  0  0    3    2 #> Valiant             3.460 20.22  1  0    3    1 #> Duster 360          3.570 15.84  0  0    3    4 #> Merc 240D           3.190 20.00  1  0    4    2 #> Merc 230            3.150 22.90  1  0    4    2 #> Merc 280            3.440 18.30  1  0    4    4 #> Merc 280C           3.440 18.90  1  0    4    4 #> Merc 450SE          4.070 17.40  0  0    3    3 #> Merc 450SL          3.730 17.60  0  0    3    3 #> Merc 450SLC         3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  5.250 17.98  0  0    3    4 #> Lincoln Continental 5.424 17.82  0  0    3    4 #> Chrysler Imperial   5.345 17.42  0  0    3    4 #> Fiat 128            2.200 19.47  1  1    4    1 #> Honda Civic         1.615 18.52  1  1    4    2 #> Toyota Corolla      1.835 19.90  1  1    4    1 #> Toyota Corona       2.465 20.01  1  0    3    1 #> Dodge Challenger    3.520 16.87  0  0    3    2 #> AMC Javelin         3.435 17.30  0  0    3    2 #> Camaro Z28          3.840 15.41  0  0    3    4 #> Pontiac Firebird    3.845 17.05  0  0    3    2 #> Fiat X1-9           1.935 18.90  1  1    4    1 #> Porsche 914-2       2.140 16.70  0  1    5    2 #> Lotus Europa        1.513 16.90  1  1    5    2 #> Ford Pantera L      3.170 14.50  0  1    5    4 #> Ferrari Dino        2.770 15.50  0  1    5    6 #> Maserati Bora       3.570 14.60  0  1    5    8 #> Volvo 142E          2.780 18.60  1  1    4    2 mtcars |>   tibble::rownames_to_column() |>   faketables:::.create_rowid(rowId = 'rowname') #>                              .rowId             rowname  mpg cyl  disp  hp drat #> 1  2d23e3b15ba4ca60801e15ea200e9881           Mazda RX4 21.0   6 160.0 110 3.90 #> 2  3a22fb8fdd9abe06ac015c318a9cbb23       Mazda RX4 Wag 21.0   6 160.0 110 3.90 #> 3  e398e9d16791027c106d8a0e15b9db5f          Datsun 710 22.8   4 108.0  93 3.85 #> 4  74110562d9d875c7c0a796bdfa3f5028      Hornet 4 Drive 21.4   6 258.0 110 3.08 #> 5  fec88e90eee01c312c6e4d62faffc3be   Hornet Sportabout 18.7   8 360.0 175 3.15 #> 6  67bc7d1f4331927271b543807da029c3             Valiant 18.1   6 225.0 105 2.76 #> 7  06cf049fe829875a135ad206b06c7cc1          Duster 360 14.3   8 360.0 245 3.21 #> 8  1cfa17a9fc21b0fa0cc840cacb97e336           Merc 240D 24.4   4 146.7  62 3.69 #> 9  768f90b2f790c37567cd789f706059a7            Merc 230 22.8   4 140.8  95 3.92 #> 10 dd5b174d4ccc58d253ddba732d5e8c89            Merc 280 19.2   6 167.6 123 3.92 #> 11 c9eede496903e4aa592f122e7d3b9ccd           Merc 280C 17.8   6 167.6 123 3.92 #> 12 ce673cec9bfac647789960b1fa973cbd          Merc 450SE 16.4   8 275.8 180 3.07 #> 13 b9a7f0ced9c33d1672ee5d45e0f4fc7f          Merc 450SL 17.3   8 275.8 180 3.07 #> 14 6537e8068d199becbd44e20cc3dfac14         Merc 450SLC 15.2   8 275.8 180 3.07 #> 15 4dc9a16d8fd64e9a46dc3bb95f97b63d  Cadillac Fleetwood 10.4   8 472.0 205 2.93 #> 16 c1ab7aede4d19fb1a6c6681bdbbb6a0a Lincoln Continental 10.4   8 460.0 215 3.00 #> 17 0c7591972ec2eda228a8f44fc5dc99e5   Chrysler Imperial 14.7   8 440.0 230 3.23 #> 18 f5434459735f4ca2bee2222629bba7b6            Fiat 128 32.4   4  78.7  66 4.08 #> 19 f8de6228181b8ec6014dde3344e301ef         Honda Civic 30.4   4  75.7  52 4.93 #> 20 020e09e97a567e7d66b2cf86ce39ae3c      Toyota Corolla 33.9   4  71.1  65 4.22 #> 21 880e8a8f96a0586e1bbfe8478ea2cd56       Toyota Corona 21.5   4 120.1  97 3.70 #> 22 6f5ceb6be555452a02622d7e8eb4f10c    Dodge Challenger 15.5   8 318.0 150 2.76 #> 23 a3cf148e8b7a1a2a498dc5cedb4f88f5         AMC Javelin 15.2   8 304.0 150 3.15 #> 24 2d0f8fcc53deae6f3f8d71cbd0f4a37d          Camaro Z28 13.3   8 350.0 245 3.73 #> 25 8a2671631bd2f9e06f44dde4a9a0240e    Pontiac Firebird 19.2   8 400.0 175 3.08 #> 26 cf3343df8c9922a9b0cf3c4bb9b4e652           Fiat X1-9 27.3   4  79.0  66 4.08 #> 27 74cfb15969bcb972cb63f58947c0dfaa       Porsche 914-2 26.0   4 120.3  91 4.43 #> 28 6158ec03c2e37b742ce0be9700495404        Lotus Europa 30.4   4  95.1 113 3.77 #> 29 bac05135d653a87113a6be8031e2f1a0      Ford Pantera L 15.8   8 351.0 264 4.22 #> 30 88686fe4995696c9b900d0656793c3c6        Ferrari Dino 19.7   6 145.0 175 3.62 #> 31 a20c88798627aac6fcc0472fe9505bdd       Maserati Bora 15.0   8 301.0 335 3.54 #> 32 a07d89cb08f727fd566d121d06b752ad          Volvo 142E 21.4   4 121.0 109 4.11 #>       wt  qsec vs am gear carb #> 1  2.620 16.46  0  1    4    4 #> 2  2.875 17.02  0  1    4    4 #> 3  2.320 18.61  1  1    4    1 #> 4  3.215 19.44  1  0    3    1 #> 5  3.440 17.02  0  0    3    2 #> 6  3.460 20.22  1  0    3    1 #> 7  3.570 15.84  0  0    3    4 #> 8  3.190 20.00  1  0    4    2 #> 9  3.150 22.90  1  0    4    2 #> 10 3.440 18.30  1  0    4    4 #> 11 3.440 18.90  1  0    4    4 #> 12 4.070 17.40  0  0    3    3 #> 13 3.730 17.60  0  0    3    3 #> 14 3.780 18.00  0  0    3    3 #> 15 5.250 17.98  0  0    3    4 #> 16 5.424 17.82  0  0    3    4 #> 17 5.345 17.42  0  0    3    4 #> 18 2.200 19.47  1  1    4    1 #> 19 1.615 18.52  1  1    4    2 #> 20 1.835 19.90  1  1    4    1 #> 21 2.465 20.01  1  0    3    1 #> 22 3.520 16.87  0  0    3    2 #> 23 3.435 17.30  0  0    3    2 #> 24 3.840 15.41  0  0    3    4 #> 25 3.845 17.05  0  0    3    2 #> 26 1.935 18.90  1  1    4    1 #> 27 2.140 16.70  0  1    5    2 #> 28 1.513 16.90  1  1    5    2 #> 29 3.170 14.50  0  1    5    4 #> 30 2.770 15.50  0  1    5    6 #> 31 3.570 14.60  0  1    5    8 #> 32 2.780 18.60  1  1    4    2"},{"path":"https://landeranalytics.github.io/faketables/reference/dot-list_col_to_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert list-type columns to character — .list_col_to_chr","title":"Convert list-type columns to character — .list_col_to_chr","text":"handy using shiny::renderTable() list type columns","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/dot-list_col_to_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert list-type columns to character — .list_col_to_chr","text":"","code":".list_col_to_chr(data)"},{"path":"https://landeranalytics.github.io/faketables/reference/dot-list_col_to_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert list-type columns to character — .list_col_to_chr","text":"data data frame","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/dot-list_col_to_chr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert list-type columns to character — .list_col_to_chr","text":"data, except list type columns contain atomic vectors now character","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/dot-list_col_to_chr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert list-type columns to character — .list_col_to_chr","text":"","code":"df <- tibble::tibble('ls' = list('a', 'b'), 'num' = 1:2) faketables:::.list_col_to_chr(df) #> # A tibble: 2 × 2 #>   ls       num #>   <chr>  <int> #> 1 c('a')     1 #> 2 c('b')     2"},{"path":"https://landeranalytics.github.io/faketables/reference/dot-reconstruct_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct a table from shiny inputs — .reconstruct_inputs","title":"Reconstruct a table from shiny inputs — .reconstruct_inputs","text":"Reconstruct table shiny inputs","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/dot-reconstruct_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct a table from shiny inputs — .reconstruct_inputs","text":"","code":".reconstruct_inputs(faketable, input)"},{"path":"https://landeranalytics.github.io/faketables/reference/dot-reconstruct_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct a table from shiny inputs — .reconstruct_inputs","text":"faketable faketable() object input shiny server input","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/dot-reconstruct_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct a table from shiny inputs — .reconstruct_inputs","text":"state faketable@data user sees UI","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/dot-reconstruct_inputs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reconstruct a table from shiny inputs — .reconstruct_inputs","text":"used internally capture changes made data UI user. first captures input, filters input name inputs created table. reconstructed format matching faketable@data column class handling done user supplied cast function col_def().","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/faketable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a faketable object — faketable","title":"Create a faketable object — faketable","text":"Create faketable object","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/faketable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a faketable object — faketable","text":"","code":"faketable(data, table_def, rowId = NULL, show_delete = NULL)"},{"path":"https://landeranalytics.github.io/faketables/reference/faketable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a faketable object — faketable","text":"data data.frame table_def table_def() object rowId character vector length one identifying column primary key, . show_delete named list passed shiny::column() holds Delete button. NULL, delete column shown.","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/faketable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a faketable object — faketable","text":"faketable object following properties: data: current state table inputs inserted: Rows data inserted data (present .raw_data) updated: Rows data modified, present .raw_data deleted: Rows .raw_data, removed appear data .raw_data: data originally pased faketable() addition .rowId column first column. column calculated using hashing either provided rowId column using row number system time. .rowId: value rowId argument .deleted: rows removed data, including inserted deleted .table_def: copy user supplied table_def() passed argument table_def .show_delete: copy user supplied list passed argument show_delete","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/faketable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a faketable object — faketable","text":"faketable object S7::S7_object() class faketable. S7 object properties accessed using @, rather traditional $. example, property data faketable object called faketable can accessed using faketable@data.","code":""},{"path":[]},{"path":"https://landeranalytics.github.io/faketables/reference/faketables-package.html","id":null,"dir":"Reference","previous_headings":"","what":"faketables: Create a Table of Shiny Inputs — faketables-package","title":"faketables: Create a Table of Shiny Inputs — faketables-package","text":"Create interactive table Shiny inputs providing data table definition.","code":""},{"path":[]},{"path":"https://landeranalytics.github.io/faketables/reference/faketables-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"faketables: Create a Table of Shiny Inputs — faketables-package","text":"Maintainer: Gus Lipkin gus@landeranalytics.com contributors: Lander Analytics [copyright holder, funder]","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/input_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a faketable bare input call — input_call","title":"Create a faketable bare input call — input_call","text":"Create faketable bare input call","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/input_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a faketable bare input call — input_call","text":"","code":"input_call(fun, args)"},{"path":"https://landeranalytics.github.io/faketables/reference/input_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a faketable bare input call — input_call","text":"fun bare shiny input function args list named arguments pass fun. include inputId.","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/input_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a faketable bare input call — input_call","text":"input_call() object","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/input_call.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a faketable bare input call — input_call","text":"","code":"input_call(shiny::textInput, args = list(label = 'Text Input')) #> function (...)  #> { #>     rlang::eval_tidy(rlang::call_modify(rlang::call2(fun, !!!args),  #>         ..., .homonyms = \"last\")) #> } #> <bytecode: 0x55ce1ab8d098> #> <environment: 0x55ce1f36b8a8> #> attr(,\"class\") #> [1] \"function\"   \"input_call\""},{"path":"https://landeranalytics.github.io/faketables/reference/insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert data into a faketable — faketablesInsert","title":"Insert data into a faketable — faketablesInsert","text":"Insert data faketable","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert data into a faketable — faketablesInsert","text":"","code":"faketablesInsert(reactive_faketable, data)"},{"path":"https://landeranalytics.github.io/faketables/reference/insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert data into a faketable — faketablesInsert","text":"reactive_faketable shiny::reactive object holds underlying faketable() data data.frame add data faketable() object. already primary key column specified table_def(), one created primary keys generated.","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert data into a faketable — faketablesInsert","text":"faketablesInsert return, reassign faketable reactive object parent environment","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/methods.html","id":null,"dir":"Reference","previous_headings":"","what":"insert, update, or delete rows from a faketables object — methods","title":"insert, update, or delete rows from a faketables object — methods","text":"insert, update, delete rows faketables object","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"insert, update, or delete rows from a faketables object — methods","text":"","code":"insert(faketable, data)  update(faketable, data)  delete(faketable, data)"},{"path":"https://landeranalytics.github.io/faketables/reference/methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"insert, update, or delete rows from a faketables object — methods","text":"faketable faketable() object data insert: data.frame add data faketable() object. already primary key column specified table_def(), one created primary keys generated. update: data.frame primary key column specified table_def() primary key values already present data. delete: Either character vector values primary key column specified table_def() data.frame rows remove vector column.","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"insert, update, or delete rows from a faketables object — methods","text":"faketable() object","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"insert, update, or delete rows from a faketables object — methods","text":"update: method add new columns change class existing columns based dplyr::rows_update().","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"insert, update, or delete rows from a faketables object — methods","text":"","code":"faketable <- faketable(   mtcars,   table_def(     col_def(       name = 'mpg',       input = input_call(         fun = shiny::textInput,         args = list(label = NULL, placeholder = 'mpg')       ),       cast = as.numeric,       width = 3,       display_name = 'MPG'     )   ) )  # insert # to insert a copy of the first row of `mtcars` faketable <- insert(faketable, utils::head(mtcars, 1))  # update # to update 'mpg' to only whole numbers faketable <- update(faketable, dplyr::mutate(faketable@data, 'mpg' = round(mpg)))  # delete # to delete the first six rows of the data where the primary key column is `rowId` rows_to_delete <- utils::head(faketable@data) faketable <- delete(faketable, rows_to_delete$.rowId) # OR faketable <- delete(faketable, rows_to_delete)  faketable@data #> # A tibble: 27 × 12 #>    .rowId        mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>  * <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 48ae6cf4e2…    14     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  2 470e7ac29b…    24     4  147.    62  3.69  3.19  20       1     0     4     2 #>  3 9fa6bf03de…    23     4  141.    95  3.92  3.15  22.9     1     0     4     2 #>  4 54296718cf…    19     6  168.   123  3.92  3.44  18.3     1     0     4     4 #>  5 97c5160dca…    18     6  168.   123  3.92  3.44  18.9     1     0     4     4 #>  6 a9390869c0…    16     8  276.   180  3.07  4.07  17.4     0     0     3     3 #>  7 e221146e56…    17     8  276.   180  3.07  3.73  17.6     0     0     3     3 #>  8 92be09f076…    15     8  276.   180  3.07  3.78  18       0     0     3     3 #>  9 9751e04177…    10     8  472    205  2.93  5.25  18.0     0     0     3     4 #> 10 4b8e83923e…    10     8  460    215  3     5.42  17.8     0     0     3     4 #> # ℹ 17 more rows"},{"path":"https://landeranalytics.github.io/faketables/reference/render_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and render a faketables table header — .render_header","title":"Create and render a faketables table header — .render_header","text":"Create render faketables table header","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/render_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and render a faketables table header — .render_header","text":"","code":".render_header(faketable)  .create_table_header(faketable)"},{"path":"https://landeranalytics.github.io/faketables/reference/render_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and render a faketables table header — .render_header","text":"faketable faketable() object","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/render_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and render a faketables table header — .render_header","text":"NULL shiny::fluidRow() containing display names faketable's table_def() rendered shiny::column()","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the shiny components required to use faketables — shiny","title":"Create the shiny components required to use faketables — shiny","text":"Create shiny components required use faketables","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the shiny components required to use faketables — shiny","text":"","code":"faketablesUI(id = \"faketables\")  faketablesServer(id = \"faketables\", faketable, insert = NULL)"},{"path":"https://landeranalytics.github.io/faketables/reference/shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the shiny components required to use faketables — shiny","text":"id ID string used identify module UI faketable faketable() object","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the shiny components required to use faketables — shiny","text":"faketablesUI: shiny::shinyApp() ui faketablesServer: shiny::reactive() object represents passed faketable() object","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/table_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a faketable table definition — table_def","title":"Create a faketable table definition — table_def","text":"Create faketable table definition","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/table_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a faketable table definition — table_def","text":"","code":"table_def(...)"},{"path":"https://landeranalytics.github.io/faketables/reference/table_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a faketable table definition — table_def","text":"... least one col_def() object. columns definition displayed. column definition rows added, column without definition receive NA value.","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/table_def.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a faketable table definition — table_def","text":"table_def() object","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/table_def.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a faketable table definition — table_def","text":"","code":"# to create a table_def to display mtcars$mpg # see faketables::col_def() for more information table_def(  col_def(    name = 'mpg',    input = input_call(      fun = shiny::textInput,      args = list(label = NULL, placeholder = 'mpg')    ),    cast = as.numeric,    width = 3,    display_name = 'MPG'  ) ) #> # A tibble: 1 × 5 #>   name  input_call cast   width display_name #> * <chr> <list>     <list> <dbl> <chr>        #> 1 mpg   <function> <fn>       3 MPG"},{"path":"https://landeranalytics.github.io/faketables/reference/validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is the correct class — validation","title":"Check if an object is the correct class — validation","text":"Check object correct class","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is the correct class — validation","text":"","code":"is_input_call(x)  is_col_def(x)  is_table_def(x)  is_faketable(x)"},{"path":"https://landeranalytics.github.io/faketables/reference/validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is the correct class — validation","text":"x object","code":""},{"path":"https://landeranalytics.github.io/faketables/reference/validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is the correct class — validation","text":"logical indication whether x belongs given class","code":""},{"path":"https://landeranalytics.github.io/faketables/news/index.html","id":"faketables-010","dir":"Changelog","previous_headings":"","what":"faketables 0.1.0","title":"faketables 0.1.0","text":"Initial CRAN submission.","code":""}]
